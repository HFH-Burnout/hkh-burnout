INTERNAL STRUCTURE FOR HAT
HEAD:
project-burnout/
PROFILE:
project-burnout/profile
JSON: {
		name: string,
		DOB: number,
		Country of Residence: string,
		Gender: string (Man, Woman, custom string, N/D,
		Occupation: string (Nurse, MD, custom string),
		Experience: number (years)
	}
PREDICTORS:
project-burnout/predictors/stable
JSON: {
		caregiving with childcare: boolean,
		caregiving with eldercare: boolean,
		caregiving other: string,
		Difficulty falling asleep: boolean, 
		Diagnosed sleeping disorder,
		Psychological empowerment: number,
		Structural empowerment: number,
		Resilience assessment: (all validated 1-5) {
			I look for creative ways to alter difficult situations: number
			Regardless of what happens to me, I believe I can control my reaction to it.: number
			I believe that I can grow in positive ways by dealing with difficult situations.: number
			I actively look for ways to replace the losses I encounter in life: number
		}
	}
project-burnout/predictors/changing
JSON: {
	protectors:{
		coworker support: bool,
		nonwork support: bool,
	},
	pushers:{
		Night Duties: bool,
		Noisy Working Environment: bool,
		Very Stressed: bool,
		Extra Work: bool,
		Work-life balance: bool,
		Hid feelings: bool,
		Interpersonal conflict: bool,
	}
}

project-burnout/predictors/SBA
JSON: {
	Single Item Burnout Assessment:{
		response: number,
	}
}
CBI:
project-burnout/predictors/CBI
JSON: {
	date: <now>,
	CBI:{
		PB: {
			PB1:typeformAnswer,
			PB2:typeformAnswer,
			PB3:typeformAnswer,
			PB4:typeformAnswer,
			PB5:typeformAnswer,
			PB6:typeformAnswer,
			PBAvg:generated,
			PBSum:generated,
		},
		WB: {
			WB1:typeformAnswer,
			WB2:typeformAnswer,
			WB3:typeformAnswer,
			WB4:typeformAnswer,
			WB5:typeformAnswer,
			WB6:typeformAnswer,
			WB7:typeformAnswer,
			WBAvg:generated,
			WBSum:generated,
		},
		CB: {
			CB1:typeformAnswer,
			CB2:typeformAnswer,
			CB3:typeformAnswer,
			CB4:typeformAnswer,
			CB5:typeformAnswer,
			CB6:typeformAnswer,
			CBAvg:generated,
			CBSum:generated,
		},
		Aggregate: func(calculateCBI) //aggregate from above data; created at entry-time to user's HAT
		Score: Aggregate/300
		PBContrib: PBSum/Aggregate
		WBContrib: WBSum/Aggregate
		CBContrib: CBSum/Aggregate
	}
}

ANALYTICS PLATFORM:
static indicators:
response object:
data entry ID:

CBI Schema
Date taken:
Personal Burnout (PB)
PB-1: How often do you feel tired?
PB-2: How often are you physically exhausted?
PB-3: How often are you emotionally exhausted?
PB-4: How often do you think "I can't take it anymore?"
PB-5: How often do you feel worn out?
PB-6: How often do you feel weak and susceptible to illness?

Work-Related Burnout (WB)
WB-1: Do you ever feel worn out at the end of the working day?
WB-2: Are you exhausted in the morning at the thought of another day of work?
WB-3: Do you feel that every working hour is tiring for you?
WB-4: Do you have enough energy for family and friends during leisure time? (invert scoring)
WB-5: Is your work emotionally exhausting?
WB-6: Does your work frustrate you?
WB-7: Do you feel burnt out because of your work?

Client-Related Burnout (CB)
CB-1: Do you find it hard to work with clients?
CB-2: Does it drain your energy to work with clients?
CB-3: Do you find it fristrating to work with clients?
CB-4: Do you feel that you give more than you get back when you work with clients?
CB-5: Are you tired of working with clients?
CB-6: Do you sometimes wonder how long you will be able to continue working with clients?

How to go from data to chart?

Place API request within webapp (probably using xhr): 
request = HTTP Get https://{user}.hubofallthings.net/api/v2.6/data/project-burnout/predictors/changing
headers: 
	x-auth-token: <user-auth-token>
	
// This will return a series of JSON. 
var target = [request[0].data.object.id, request[1].data.object.id, ... request[13].data.object.id] // for 2 weeks of data



//MODIFIED HIGHCHARTS.CHART
Highcharts.chart('container', {

    title: {
        text: 'Chart Title here!'
    },

    yAxis: {
    },

    xAxis: {
        accessibility: {
            rangeDescription: 'Last Two Weeks'
        }
    },

    legend: {
        layout: 'vertical',
        align: 'right',
        verticalAlign: 'middle'
    },

    plotOptions: {
        series: {
            label: {
                connectorAllowed: false
            },
            pointStart: request[0].data.object.date //convert to MMDDYYYY
        }
    },

    series: [{
        name: 'Progress',
        data: []
    },

    responsive: {
        rules: [{
            condition: {
                maxWidth: 500
            },
            chartOptions: {
                legend: {
                    layout: 'horizontal',
                    align: 'center',
                    verticalAlign: 'bottom'
                }
            }
        }]
    }

});