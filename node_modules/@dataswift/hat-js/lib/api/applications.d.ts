import { HatApplication } from '../interfaces/hat-application.interface';
import { HttpService } from '../services/HttpService';
import { ClientState } from '../index';
import { HatHttpParameters, IHttpResponse } from '../interfaces/http.interface';
export interface Applications {
    getAllDefault: () => Promise<IHttpResponse<HatApplication[]>>;
    getAll: (options: HatHttpParameters) => Promise<IHttpResponse<HatApplication[]>>;
    getById: (appId: string) => Promise<IHttpResponse<HatApplication>>;
    getAppStatus: (app: HatApplication) => 'goto' | 'running' | 'fetching' | 'failing' | 'untouched' | 'update';
    getSetupUrl: (app: HatApplication, redirect: string, fallback: string) => string;
}
export declare const applications: (config: ClientState, headers: Record<string, string>, httpSvc: HttpService) => Applications;
