export declare class HatCustomError extends Error {
    private cause;
    message: string;
    private status;
    constructor(cause?: string, message?: string, status?: number, ...params: any);
}
export declare enum HatCustomErrorCauses {
    tokenValidation = "HAT_TOKEN_VALIDATION",
    hatClientValidation = "HAT_CLIENT_VALIDATION",
    hatApiException = "HAT_API_EXCEPTION",
    hatFileApi = "HAT_FILE_API_EXCEPTION"
}
export declare enum HatCustomErrorMessages {
    tokenIsNotValidOrExpired = "HAT_TOKEN_IS_NOT_VALID_OR_EXPIRED",
    tokenIsUndefined = "HAT_TOKEN_IS_UNDEFINED",
    tokenFailedToDecode = "HAT_TOKEN_FAILED_TO_DECODE",
    notAuthenticated = "NOT_AUTHENTICATED",
    httpResponseFailed = "HTTP_RESPONSE_FAILED",
    fileIsUndefined = "FILE_IS_UNDEFINED",
    fileFailedToFetchMetadata = "FAILED_TO_FETCH_METADATA",
    fileFailedToUpload = "FILE_FAILED_TO_UPLOAD",
    hatDomainIsUndefined = "HAT_DOMAIN_IS_UNDEFINED",
    applicationNotSupported = "APPLICATION_NOT_SUPPORTED",
    recordIdsMissing = "RECORD_IDS_MISSING"
}
